name: Build and upload python package

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write  # 允许提交代码

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Generate version number
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          # 如果是标签推送，使用标签版本
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "Using tag version: $VERSION"
        else
          # 基于 2025 年的日期版本号 + 构建号
          BASE_YEAR=2025
          CURRENT_YEAR=$(date +%Y)
          CURRENT_MONTH=$(date +%-m)  # 去掉前导零
          CURRENT_DAY=$(date +%-d)    # 去掉前导零
          BUILD_NUMBER=$(date +%H%M)  # 小时分钟作为构建号
          
          YEAR_OFFSET=$((CURRENT_YEAR - BASE_YEAR))
          
          VERSION="${YEAR_OFFSET}.${CURRENT_MONTH}.${CURRENT_DAY}.${BUILD_NUMBER}"
          echo "Generated version: $VERSION"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"
    
    - name: Update version in pyproject.toml
      run: |
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        sed -i "s|version = \"[^\"]*\"|version = \"${VERSION}\"|" pyproject.toml
        echo "Updated pyproject.toml version:"
        cat pyproject.toml | grep version
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Commit version update
      if: github.ref == 'refs/heads/main'
      run: |
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add pyproject.toml
        git commit -m "chore: bump version to ${VERSION} [skip ci]" || echo "No changes to commit"
        git push